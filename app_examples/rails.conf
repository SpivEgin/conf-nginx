# Rails Virtual Host 
# save this file in your app's config directory as nginx.conf
# replace app_name w/ your app's name
# replace app.com w/ your app's domain    

server {
  listen 80;
  server_name app.com;

  root /rails/app_name/current/public;

  access_log  /rails/app_name/shared/log/nginx.log  main;

  # Set the max size for file uploads to 50Mb
  client_max_body_size 50M;

  # this rewrites all the requests to the maintenance.html
  # page if it exists in the doc root. This is for capistrano's
  # disable web task
  if (-f $document_root/system/maintenance.html) {
    rewrite  ^(.*)$  /system/maintenance.html last;
    break;
  }    

  location / {
    # needed to forward user's IP address to rails
    proxy_set_header  X-Real-IP  $remote_addr;


    # If the file exists as a static file serve it directly without
    # running all the other rewite tests on it
    if (-f $request_filename) { 
      break; 
    }

    # check for index.html for directory index
    # if its there on the filesystem then rewite 
    # the url to add /index.html to the end of it
    # and then break to send it to the next config rules.
    if (-f $request_filename/index.html) {
      rewrite (.*) $1/index.html break;
    }

    # this is the meat of the rails page caching config
    # it adds .html to the end of the url and then checks
    # the filesystem for that file. If it exists, then we
    # rewite the url to have explicit .html on the end 
    # and then send it on its way to the next config rule.
    # if there is no file on the fs then it sets all the 
    # necessary headers and proxies to our upstream mongrels
    if (-f $request_filename.html) {
      rewrite (.*) $1.html break;
    }        

    if (!-f $request_filename) {
      proxy_pass http://app_name;
      break;
    }
  }

  error_page   500 502 503 504  /500.html;
  location = /500.html {
    root   /www/apps/app_name/current/public;
  }
}